---
# Limit what local accounts can do

##
## There can be only one (root user with UID: 0)!
##

- name: "localaccounts : ensure no other users besides root have UID: 0"
  block:
    - name: "localaccounts : parse /etc/passwd"
      ansible.builtin.command:
        argv:
          - cat
          - /etc/passwd
      changed_when: no
      register: __security_passwd_file_audit

    - name: "localaccounts : check for non-root UID: 0"
      ansible.builtin.debug:
        msg: "{{ item.split(':')[0] }}"
      with_items: "{{ __security_passwd_file_audit.stdout_lines }}"
      failed_when: item.split(':')[0] != 'root' and item.split(':')[2]|int == 0
      when: item.split(':')[2]|int == 0
      loop_control:
        label: "{{ item.split(':')[0] }}: {{ item.split(':')[2] }}"

    - name: "localaccounts : clear passwd variable"
      ansible.builtin.set_fact:
        __security_passwd_file_audit: ""


##
## Set the maximum number of concurrent logins an individual user can have
##

- name: "localaccounts : set login limits"
  ansible.builtin.template:
    src: maxlogins.j2
    dest: /etc/security/limits.d/999-maxlogins.conf
    owner: root
    group: root
    mode: 0644
  become: yes


##
## Set login timeouts
##

- name: "loginaccounts : define login timeout variable"
  ansible.builtin.lineinfile:
    path: /etc/profile
    line: "TMOUT={{ security_login_timeout }}"
  become: yes

- name: "loginaccounts : make login timeout variable read-only"
  ansible.builtin.lineinfile:
    path: /etc/profile
    line: "readonly TMOUT"
    insertafter: "TMOUT={{ security_login_timeout }}"
  become: yes

- name: "loginaccounts : export the login timeout variable"
  ansible.builtin.lineinfile:
    path: /etc/profile
    line: "export TMOUT"
    insertafter: "readonly TMOUT"
  become: yes
